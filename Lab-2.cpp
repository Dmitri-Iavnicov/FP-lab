// Iavnicov Dmitri, I2302, Lab 2,   Вариант 31
// Дан одномерный числовой массив. Написать программу   для поиска значение 3-го по величине элемента
// и значения всех элементов массива, которые его превышают, заменить на найденное значение.
// Диапазон значений: 0 – 100, размерность массива 200.

#include <iostream>
#include <stdlib.h>
#include <time.h>

int main()
{
    // В качестве сида для srand() будет использоваться системное время
    // Т.о. при каждом запуске для массива будут генерироваться различные последовательности чисел
    srand(time(NULL));

    // arr - исходный массив
    // arrc - отсортированная версия arr, в которой будет осуществляться поиск
    // arrs - размер массива (по условию - 200)
    // tmp - временная переменная для цикла сортировки
    // fe - какой элемент по величине необходимо найти (по условию - 3, но можно любой другой)
    // ce - то каким по величине является текущий элемент (см. цикл поиска)
    // rev - значение элемента, который необходимо найти
    // i, j - переменные счетчика циклов
    short int arrs = 20;
    short int arr[arrs]{};
    short int arrc[arrs]{};
    short int tmp{};
    short int fe = 3;
    short int ce = 1;
    short int rev{};
    short int i{};
    short int j{};

    printf("Исходный массив: \n\n");

    // Заполнение arr псевдослучайными значениями, копирование arr в arrc, вывод arr
    for (i = 0; i < arrs; i++)
    {
        arr[i] = rand() % 101;
        arrc[i] = arr[i];
        printf("arr[%d] = %d\n", i, arr[i]);
    }

    // Сортировка arrc (наибольшие в конце массива)
    for (i = 0; i < arrs; i++)
    {
        for (j = 0; j < arrs - 1 - i; j++)
        {
            if (arrc[j] > arrc[j + 1])
            {
                tmp = arrc[j];
                arrc[j] = arrc[j + 1];
                arrc[j + 1] = tmp;
            }
        }
    }

    // Поиск значения одного из fe по величине элемента в arrc
    for (i = arrs - 1; i >= 0; i--)
    {
        if (arrc[i - 1] < arrc[i])
        {
            ce += 1;
            if (ce == fe)
            {
                rev = arrc[i - 1];
                break;
            }
        }
    }

    printf("\n\n");

    // Поиск и вывод всех fe по велечине элементов в arr
    for (i = 0; i < arrs; i++)
    {
        if (rev == arr[i])
        {
            printf("Один из %d по величине элементов массива: arr[%d] = %d\n", fe, i, arr[i]);
        }
    }

    printf("\n\n");

    // Замена значений элементов в arr, которые больше, чем значение fe по велечине элемента
    for (i = 0; i < arrs; i++)
    {
        if (arr[i] > rev)
        {
            printf("Значение arr[%d] = %d заменено на %d\n", i, arr[i], rev);
            arr[i] = rev;
        }
    }

    // Вывод изменного arr
    printf("\n\nИзменный массив: \n\n");
    for (i = 0; i < arrs; i++)
    {
        printf("arr[%d] = %d\n", i, arr[i]);
    }
}
